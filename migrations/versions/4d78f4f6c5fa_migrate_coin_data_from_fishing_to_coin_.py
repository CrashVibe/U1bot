"""migrate coin data from fishing to coin plugin

迁移 ID: 4d78f4f6c5fa
父迁移: b3a3a7de2c5e
创建时间: 2025-06-19 04:29:14.893614

"""

from __future__ import annotations

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import mysql

revision: str = "4d78f4f6c5fa"
down_revision: str | Sequence[str] | None = "b3a3a7de2c5e"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    # 1. 创建新的金币表
    op.create_table(
        "coin_coinrecord",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.String(length=32), nullable=False),
        sa.Column("coin", sa.Float(), nullable=False),
        sa.Column("count_coin", sa.Float(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_coin_coinrecord")),
    )

    # 2. 迁移数据：从钓鱼表迁移金币数据到金币表
    connection = op.get_bind()

    # 查询所有有金币数据的用户
    fishing_data = connection.execute(
        sa.text(
            "SELECT user_id, coin, count_coin FROM fishing_fishingrecord WHERE coin > 0 OR count_coin > 0"
        )
    ).fetchall()

    # 将数据插入到新的金币表
    if fishing_data:
        for row in fishing_data:
            connection.execute(
                sa.text(
                    "INSERT INTO coin_coinrecord (user_id, coin, count_coin) VALUES (:user_id, :coin, :count_coin)"
                ),
                {"user_id": row[0], "coin": row[1], "count_coin": row[2]},
            )

    # 3. 删除钓鱼表中的金币字段
    with op.batch_alter_table("fishing_fishingrecord", schema=None) as batch_op:
        batch_op.drop_column("count_coin")
        batch_op.drop_column("coin")

    # ### end Alembic commands ###


def downgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    # 1. 恢复钓鱼表的金币字段
    with op.batch_alter_table("fishing_fishingrecord", schema=None) as batch_op:
        batch_op.add_column(sa.Column("coin", mysql.FLOAT(), nullable=False))
        batch_op.add_column(sa.Column("count_coin", mysql.FLOAT(), nullable=False))

    # 2. 迁移数据：从金币表迁移回钓鱼表
    connection = op.get_bind()

    # 查询金币表数据
    coin_data = connection.execute(
        sa.text("SELECT user_id, coin, count_coin FROM coin_coinrecord")
    ).fetchall()

    # 更新钓鱼表的金币数据
    if coin_data:
        for row in coin_data:
            connection.execute(
                sa.text(
                    "UPDATE fishing_fishingrecord SET coin = :coin, count_coin = :count_coin WHERE user_id = :user_id"
                ),
                {"user_id": row[0], "coin": row[1], "count_coin": row[2]},
            )

    # 3. 删除金币表
    op.drop_table("coin_coinrecord")
    # ### end Alembic commands ###
